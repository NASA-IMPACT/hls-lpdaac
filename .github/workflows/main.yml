# Install Python dependencies, run tests, and lint with a single version of Python.
# See https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: HLS LPDAAC Historical

on:
  release:
    types:
      - published
  push:
    branches:
      - main
      - develop
    tags-ignore:
      - '*'
    paths:
      - 'cdk/**'
      - 'src/**'
      - 'cdk.json'
      - 'Makefile'
      - 'setup.py'
      - 'tox.ini'
  pull_request:
    types:
      - edited
      - opened
      - reopened
      - synchronize
    branches:
      - main
      - develop
    paths:
      - 'cdk/**'
      - 'src/**'
      - 'cdk.json'
      - 'Makefile'
      - 'setup.py'
      - 'tox.ini'

defaults:
  run:
    shell: bash

env:
  PYTHON_VERSION: "3.9"
  # `allowlist_externals` introduced in tox 3.18.0 (deprecating `whitelist_externals`)
  TOX_MIN_VERSION: "3.18.0"

jobs:
  unit-tests:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "${{ env.PYTHON_VERSION }}"
      - name: Install dependencies
        run: |
          pip install "tox>=${{ env.TOX_MIN_VERSION }}"
      - name: Run unit tests
        run: make unit-tests

  integration-tests:
    if: >-
      (github.event_name == 'pull_request' && (github.base_ref == 'develop' || github.base_ref == 'main')) ||
      (github.event_name == 'push' && (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main')) ||
      (github.event_name == 'release')
    runs-on: ubuntu-20.04
    needs: unit-tests
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "${{ env.PYTHON_VERSION }}"
      - name: Install dependencies
        run: |
          pip install "tox>=${{ env.TOX_MIN_VERSION }}"
      - name: Run integration tests
        run: |
          make ci-deploy
          # Ensure stack is destroyed at exit, even if tests fail
          trap "make ci-destroy" EXIT
          make integration-tests

  deploy-dev:
    # Deploy to Dev only on push (including merged PR) to `develop` branch
    if: github.event_name == 'push' && github.event.ref == 'refs/heads/develop'
    needs: integration-tests
    uses: ./.github/workflows/deploy.yml
    with:
      environment: dev
      PYTHON_VERSION: "${{ env.PYTHON_VERSION }}"
      TOX_MIN_VERSION: "${{ env.TOX_MIN_VERSION }}"
    secrets: inherit

  deploy-prod:
    # Deploy to Prod only on publishing a release (tag) on `main` branch
    if: github.event_name == 'release' && github.event.action == 'published'
    needs: integration-tests
    uses: ./.github/workflows/deploy.yml
    with:
      environment: prod
      PYTHON_VERSION: "${{ env.PYTHON_VERSION }}"
      TOX_MIN_VERSION: "${{ env.TOX_MIN_VERSION }}"
    secrets: inherit
